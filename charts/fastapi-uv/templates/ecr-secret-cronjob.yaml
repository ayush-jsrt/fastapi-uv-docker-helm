apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-secret-refresh
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "0 */6 * * *"  # Every 6 hours
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ecr-secret-creator
          restartPolicy: OnFailure
          containers:
          - name: refresh-ecr-secret
            image: amazon/aws-cli:latest
            env:
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: awscredentials
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: awscredentials
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: awscredentials
                  key: AWS_SECRET_ACCESS_KEY
            - name: ECR_REGISTRY
              value: {{ (split "/" .Values.image.repository)._0 | quote }}
            - name: SECRET_NAME
              value: "ecr-registry-secret"
            command:
            - /bin/sh
            - -c
            - |
              set -e
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              chmod +x kubectl && mv kubectl /usr/local/bin/
              
              ECR_PASSWORD=$(aws ecr get-login-password --region $AWS_REGION)
              kubectl delete secret $SECRET_NAME -n {{ .Release.Namespace }} --ignore-not-found=true
              kubectl create secret docker-registry $SECRET_NAME \
                --docker-server=$ECR_REGISTRY \
                --docker-username=AWS \
                --docker-password=$ECR_PASSWORD \
                -n {{ .Release.Namespace }}
              echo "ECR secret refreshed at $(date)"